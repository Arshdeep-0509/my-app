{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","style","color","heading","for","value","backgroundColor","onChange","event","target","rows","newText","toLocaleUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","toUpperCase","slice","capatilised","msg","App","Mode","setMode","setAlert","message","setTimeout","aboutTxt","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9498d6ea.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText} </a>\r\n        </li> */}\r\n      \r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'? 'dark' : 'light'}`}>   \r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n// props types and default props\r\n\r\nNavbar.propTypes = {\r\n                    title : PropTypes.string,\r\n                    aboutTxt: PropTypes.string   }\r\n\r\n      \r\n// Navbar.defaultProps = {\r\n// title: 'set title here',\r\n// aboutTxt: 'About Text  here'\r\n\r\n// };                   ","    import React, {useState} from 'react'\r\n\r\n\r\n    export default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n    //  console.log(\"Upercase was clicked \" + text );\r\n    let newText = text.toLocaleUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to UpperCase\" , \"success\");\r\n\r\n    }\r\n    const handleLoClick = () =>  {\r\n    //  console.log(\"Upercase was clicked \" + text );\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to LowerCase\" , \"success\");\r\n\r\n    }\r\n    const handleClearClick = () =>  {\r\n\r\n    let newText = '';\r\n    setText(newText)\r\n    props.showAlert(\"Text is Cleared ! \" , \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n    //  console.log(\"on change \");\r\n    setText(event.target.value) // we used onChange in order to update the event \r\n    \r\n    }\r\n\r\n        const [text, setText] = useState('Enter text here');  // text here is the value which we want as a text \r\n        //and the  text after the use State is the default value \r\n\r\n\r\n    return (\r\n        <>\r\n            <div className= \"container \" style={{color: props.mode==='dark'? 'white' : '#402743'}} >\r\n                \r\n            <h1>{props.heading} </h1>\r\n    <div className=\"mb-3\">\r\n    <label for=\"myBox\" className=\"form-label\"></label>\r\n    <textarea className=\"form-control\" value= {text}  style={{backgroundColor: props.mode==='dark'? 'grey' : 'White' , color: props.mode==='dark'? 'white' : '#402743' }}  onChange= {handleOnChange}  id=\"myBox\" rows=\"8\"></textarea>\r\n    </div> \r\n\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}> Convert to UpperCase </button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}> Convert to LowerCase </button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleClearClick}> Clear Text </button>\r\n            </div>\r\n    \r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'? 'white' : '#402743'}}>\r\n    <h1>Your Text Summery</h1>\r\n    <p>   {text.split(\" \").length} words  and {text.length} characters</p>\r\n    <p> {0.008 * text.split(\" \").length }  Minutes Read</p>\r\n\r\n    <h2>Preview </h2>\r\n\r\n    <p>{text.length>0?text:\"Enter something in the Textbox above to  Preview it here!\"}</p>\r\n    </div>\r\n\r\n </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   \r\n   const capatilised = (word) => {\r\n\r\n     const lower = word.toLowerCase();    \r\n     return lower.charAt(0).toUpperCase()+ lower.slice(1);    \r\n\r\n   }\r\n    return (\r\n        \r\n        props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n          <strong>{capatilised(props.alert.type)}</strong> : {props.alert.msg}\r\n \r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from './components/About';\n\nimport React, { useState } from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\"); // whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled \" , \"success\");\n\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled \" , \"success\");\n\n    }\n  };\n  return (\n    <>\n    {/* <Router>  */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutTxt=\"About \"\n        mode={Mode}\n        toggleMode={toggleMode}\n      />\n      \n\n      <Alert alert= {alert} />\n\n\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text Here!\" mode={Mode} />\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n        {/* </Router> */}\n      \n        \n\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}